{"version":3,"sources":["App.js","index.js"],"names":["App","useState","gridVisibility","setGridVisibility","preserveBuffer","setPreserveBuffer","THREE","window","innerWidth","innerHeight","camera","grid","particles","setParticles","dt","setDT","sigma","rho","beta","params","setParams","useEffect","stats","Stats","showPanel","document","getElementById","appendChild","dom","scene","visible","add","renderer","preserveDrawingBuffer","antialias","autoClearColor","setSize","body","domElement","controls","OrbitControls","addEventListener","clear","aspect","updateProjectionMatrix","geometry","color","positions","colors","i","x","Math","random","y","z","push","setRGB","abs","r","g","b","setAttribute","material","size","vertexColors","points","light","position","update","animate","begin","requestAnimationFrame","attributes","array","needsUpdate","length","_x","_y","_z","dx","dy","dz","updatePTS","render","end","dispose","console","log","id","style","height","width","right","top","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","Grid","container","direction","Divider","item","spacing","xs","onSubmit","event","preventDefault","f","FormData","target","Number","get","TextField","name","defaultValue","inputProps","type","step","label","Button","fullWidth","FormControl","InputLabel","Select","value","onChange","MenuItem","FormControlLabel","control","Switch","checked","fontSize","labelPlacement","onClick","set","ReactDOM","StrictMode"],"mappings":"0XAwQeA,MA5Pf,WACE,MAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEA,EAA4BJ,mBAAS,IAAIK,IAAwB,GAAIC,OAAOC,WAAaD,OAAOE,YAAa,GAAK,MAAlH,mBAAOC,EAAP,KAEA,GAFA,KAEwBT,mBAAS,IAAIK,IAAiB,IAAK,OAA3D,mBAAOK,EAAP,KACA,GADA,KACkCV,mBAAS,MAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAoBZ,mBAAS,QAA7B,mBAAOa,EAAP,KAAWC,EAAX,KAEA,EAA4Bd,mBAAS,CAAEe,MAAO,GAAIC,IAAK,GAAIC,KAAM,EAAM,IAAvE,mBAAOC,EAAP,KAAeC,EAAf,KAyGA,OAxGAC,qBAAU,WAER,IAAMC,EAAQ,IAAIC,IAClBD,EAAME,UAAU,GAChBC,SAASC,eAAe,SAASC,YAAYL,EAAMM,KACnD,IAAMC,EAAQ,IAAIvB,IAElBK,EAAKmB,SAAU,EACfD,EAAME,IAAIpB,GACV,IAAMqB,EAAW,IAAI1B,IAAoB,CAAE2B,sBAAuB7B,EAAgB8B,WAAW,IAC7FF,EAASG,gBAAkB/B,EAC3B4B,EAASI,QAAQ7B,OAAOC,WAAYD,OAAOE,aAC3CgB,SAASY,KAAKV,YAAYK,EAASM,YAEnC,IAAMC,EAAW,IAAIC,IAAc9B,EAAQsB,EAASM,YACpDC,EAASE,iBAAiB,UAAU,WAAQT,EAASU,WAOrDnC,OAAOkC,iBAAiB,UAJtB/B,EAAOiC,OAASpC,OAAOC,WAAaD,OAAOE,YAC3CC,EAAOkC,8BACPZ,EAASI,QAAQ7B,OAAOC,WAAYD,OAAOE,eAQ7C,IAJA,IAAMoC,EAAW,IAAIvC,IACfwC,EAAQ,IAAIxC,IACZyC,EAAY,GACZC,EAAS,GACNC,EAAI,EAAGA,EAAIrC,EAAWqC,IAAK,CAClC,IAAMC,EAAqB,GAAhBC,KAAKC,SACVC,EAAqB,GAAhBF,KAAKC,SACVE,EAAqB,GAAhBH,KAAKC,SAChBL,EAAUQ,KAAKL,EAAGG,EAAGC,GACrBR,EAAMU,OAAOL,KAAKM,IAAIP,EAAI,IAAKC,KAAKM,IAAIJ,EAAI,IAAKF,KAAKM,IAAIH,EAAI,KAC9DN,EAAOO,KAAKT,EAAMY,EAAGZ,EAAMa,EAAGb,EAAMc,GAEtCf,EAASgB,aAAa,WAAY,IAAIvD,IAA6ByC,EAAW,IAC9EF,EAASgB,aAAa,QAAS,IAAIvD,IAA6B0C,EAAQ,IACxE,IAAMc,EAAW,IAAIxD,IAAqB,CAAEyD,KAAM,IAAKC,cAAc,IAC/DC,EAAS,IAAI3D,IAAauC,EAAUiB,GAC1CjC,EAAME,IAAIkC,GAGV,IAAMjD,EAAQG,EAAOH,MACfC,EAAME,EAAOF,IACbC,EAAOC,EAAOD,KAoBdgD,EAAQ,IAAI5D,IAAmB,SAAU,KAC/CuB,EAAME,IAAImC,GACVxD,EAAOyD,SAASb,EAAI,GACpB5C,EAAOyD,SAASjB,EAAI,EACpBxC,EAAOyD,SAASd,EAAI,EACpBd,EAAS6B,SAUT,OATc,SAAVC,IACF/C,EAAMgD,QACNC,sBAAsBF,GA3BN,WAChB,IAAMtB,EAAYkB,EAAOpB,SAAS2B,WAAWL,SAASM,MACtDR,EAAOpB,SAAS2B,WAAWL,SAASO,aAAc,EAElD,IAAK,IAAIzB,EAAI,EAAGA,EAAIF,EAAU4B,OAAQ1B,GAAK,EAAG,CAE5C,IAAM2B,EAAK7B,EAAUE,GACf4B,EAAK9B,EAAUE,EAAI,GACnB6B,EAAK/B,EAAUE,EAAI,GAEnB8B,EAAM/D,GAAS6D,EAAKD,GAAO9D,EAC3BkE,GAAOJ,GAAM3D,EAAM6D,GAAOD,GAAM/D,EAChCmE,GAAOL,EAAKC,EAAO3D,EAAO4D,GAAOhE,EAEvCiC,EAAUE,IAAM8B,EAChBhC,EAAUE,EAAI,IAAM+B,EACpBjC,EAAUE,EAAI,IAAMgC,GAYtBC,GACA3C,EAAS6B,SACTpC,EAASmD,OAAOtD,EAAOnB,GACvBY,EAAM8D,MAERf,GACO,WACLxB,EAASwC,UACTvB,EAASuB,UACTrD,EAASqD,aAEV,CAACjF,EAAgBQ,EAAWD,EAAMD,EAAQI,EAAIK,IAkBjDmE,QAAQC,IAAIpE,GAEV,gCACE,qBAAKqE,GAAG,QAAQC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,UAChD,qBAAKH,GAAG,UAAUC,MAAO,CAAEtB,SAAU,WAAYyB,MAAO,MAAOC,IAAK,OAApE,SACE,eAACC,EAAA,EAAD,CAAWL,MAAO,CAAEE,MAAO,SAA3B,UACE,cAACI,EAAA,EAAD,CAAkBC,WAAY,cAAC,IAAD,IAA9B,SACE,cAACC,EAAA,EAAD,wBAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,UACE,cAACC,EAAA,EAAD,IACA,eAACH,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,QAAS,EAA9B,UACE,eAACL,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,UACE,cAACR,EAAA,EAAD,qHAIA,cAACA,EAAA,EAAD,kCACA,cAACA,EAAA,EAAD,oCACA,cAACA,EAAA,EAAD,sCAEF,cAACE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,uBAAMC,SAhCD,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAI,IAAIC,SAASH,EAAMI,QAC7B3F,EAAU,CAAEJ,MAAOgG,OAAOH,EAAEI,IAAI,UAAW/F,KAAM8F,OAAOH,EAAEI,IAAI,SAAUhG,IAAK+F,OAAOH,EAAEI,IAAI,WA6B5E,UACE,cAACC,EAAA,EAAD,CAAWC,KAAK,QAAQC,aAAcjG,EAAOH,MAAOqG,WAAY,CAAEC,KAAM,SAAUC,KAAM,OAASC,MAAM,UACvG,cAACN,EAAA,EAAD,CAAWC,KAAK,OAAOC,aAAcjG,EAAOD,KAAMmG,WAAY,CAAEC,KAAM,SAAUC,KAAM,OAASC,MAAM,SACrG,cAACN,EAAA,EAAD,CAAWC,KAAK,MAAMC,aAAcjG,EAAOF,IAAKoG,WAAY,CAAEC,KAAM,SAAUC,KAAM,OAASC,MAAM,QACnG,cAACC,EAAA,EAAD,CAAQC,WAAS,EAACJ,KAAK,SAAvB,mCAIN,cAAChB,EAAA,EAAD,IAEA,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,QAAS,EAA9B,UACE,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,cAACR,EAAA,EAAD,4HAGF,cAACE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,eAACkB,EAAA,EAAD,CACED,WAAS,EADX,UAGE,cAACE,EAAA,EAAD,wBACA,eAACC,EAAA,EAAD,CACEC,MAAOlH,EACPmH,SA7DM,SAACpB,GAC3B9F,EAAa8F,EAAMI,OAAOe,QA0DR,UAIE,cAACE,EAAA,EAAD,CAAUF,MAAO,IAAjB,mBACA,cAACE,EAAA,EAAD,CAAUF,MAAO,IAAjB,mBACA,cAACE,EAAA,EAAD,CAAUF,MAAO,IAAjB,mBACA,cAACE,EAAA,EAAD,CAAUF,MAAO,IAAjB,mBACA,cAACE,EAAA,EAAD,CAAUF,MAAO,IAAjB,iCAMV,cAACxB,EAAA,EAAD,IAEA,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,QAAS,EAA9B,UACE,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,cAACR,EAAA,EAAD,mHAGF,cAACE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,eAACkB,EAAA,EAAD,CACED,WAAS,EADX,UAGE,cAACE,EAAA,EAAD,uBACA,eAACC,EAAA,EAAD,CACEC,MAAOhH,EACPiH,SArFC,SAACpB,GACtB5F,EAAM4F,EAAMI,OAAOe,QAkFD,UAIE,cAACE,EAAA,EAAD,CAAUF,MAAO,OAAjB,qBACA,cAACE,EAAA,EAAD,CAAUF,MAAO,OAAjB,oBACA,cAACE,EAAA,EAAD,CAAUF,MAAO,MAAjB,kBACA,cAACE,EAAA,EAAD,CAAUF,MAAO,KAAjB,8BAMV,cAACxB,EAAA,EAAD,IAEA,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,QAAS,EAA9B,UACE,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,cAACR,EAAA,EAAD,oFAEF,cAACE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,cAACwB,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAAShI,EAAgB2H,SAAU,kBAAM1H,GAAmBD,MAC7EoH,MAAO,cAACvB,EAAA,EAAD,CAAYR,MAAO,CAAE4C,SAAU,WAA/B,yBACPC,eAAe,iBAMvB,cAAChC,EAAA,EAAD,IAEA,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,QAAS,EAA9B,UACE,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,cAACR,EAAA,EAAD,iDAEF,cAACE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,cAACwB,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASlI,EAAgB6H,SAlH3C,WACjB5H,GAAmBQ,EAAKmB,SACxBnB,EAAKmB,SAAWnB,EAAKmB,WAiHH0F,MAAO,cAACvB,EAAA,EAAD,CAAYR,MAAO,CAAE4C,SAAU,WAA/B,yBACPC,eAAe,iBAKvB,cAAChC,EAAA,EAAD,IAEA,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,QAAS,EAA9B,UACE,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,cAACR,EAAA,EAAD,qDAEF,cAACE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAf,SACE,cAACgB,EAAA,EAAD,CAAQC,WAAS,EAACa,QAAS,kBAAM7H,EAAOyD,SAASqE,IAAI,EAAG,EAAG,KAA3D,8CCtPpBC,IAAStD,OACP,cAAC,IAAMuD,WAAP,UACE,cAAC,EAAD,MAEFjH,SAASC,eAAe,W","file":"static/js/main.7b0d9875.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport Stats from 'stats.js'\r\n\r\nimport {\r\n  Button, Select, MenuItem, FormControl, InputLabel, Grid, Accordion, Typography,\r\n  Switch, AccordionDetails, AccordionSummary, TextField, Divider, FormControlLabel\r\n} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nfunction App() {\r\n  const [gridVisibility, setGridVisibility] = useState(false)\r\n  const [preserveBuffer, setPreserveBuffer] = useState(false)\r\n  // eslint-disable-next-line\r\n  const [camera, setCamera] = useState(new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000))\r\n  // eslint-disable-next-line\r\n  const [grid, setGrid] = useState(new THREE.GridHelper(150, 150))\r\n  const [particles, setParticles] = useState(20000)\r\n  const [dt, setDT] = useState(.00125)\r\n  // eslint-disable-next-line\r\n  const [params, setParams] = useState({ sigma: 10, rho: 28, beta: 8.0 / 3.0 })\r\n  useEffect(() => {\r\n    // show stats\r\n    const stats = new Stats()\r\n    stats.showPanel(0)\r\n    document.getElementById('stats').appendChild(stats.dom)\r\n    const scene = new THREE.Scene();\r\n    // scene.background = new THREE.Color(0x121212)\r\n    grid.visible = false;\r\n    scene.add(grid);\r\n    const renderer = new THREE.WebGLRenderer({ preserveDrawingBuffer: preserveBuffer, antialias: true })\r\n    renderer.autoClearColor = !preserveBuffer;\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(renderer.domElement);\r\n\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.addEventListener('change', () => { renderer.clear() })\r\n\r\n    const resizeWindow = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    }\r\n    window.addEventListener('resize', resizeWindow());\r\n\r\n    const geometry = new THREE.BufferGeometry();\r\n    const color = new THREE.Color();\r\n    const positions = [];\r\n    const colors = [];\r\n    for (let i = 0; i < particles; i++) {\r\n      const x = (Math.random() * 25);\r\n      const y = (Math.random() * 25);\r\n      const z = (Math.random() * 25);\r\n      positions.push(x, y, z)\r\n      color.setRGB(Math.abs(x / 25), Math.abs(y / 25), Math.abs(z / 25));\r\n      colors.push(color.r, color.g, color.b);\r\n    }\r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n    geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\r\n    const material = new THREE.PointsMaterial({ size: .15, vertexColors: true });\r\n    const points = new THREE.Points(geometry, material);\r\n    scene.add(points);\r\n\r\n    // params for lorenz equations\r\n    const sigma = params.sigma\r\n    const rho = params.rho\r\n    const beta = params.beta\r\n    const updatePTS = () => {\r\n      const positions = points.geometry.attributes.position.array;\r\n      points.geometry.attributes.position.needsUpdate = true;\r\n\r\n      for (let i = 0; i < positions.length; i += 3) {\r\n        // console.log(i, positions[i], positions[i + 1], positions[i + 2])\r\n        const _x = positions[i]\r\n        const _y = positions[i + 1]\r\n        const _z = positions[i + 2]\r\n\r\n        const dx = (sigma * (_y - _x)) * dt;\r\n        const dy = ((_x * (rho - _z)) - _y) * dt\r\n        const dz = ((_x * _y) - (beta * _z)) * dt\r\n\r\n        positions[i] += dx\r\n        positions[i + 1] += dy\r\n        positions[i + 2] += dz\r\n      }\r\n    }\r\n    const light = new THREE.AmbientLight(0xffffff, 100);\r\n    scene.add(light);\r\n    camera.position.z = 75;\r\n    camera.position.x = 0;\r\n    camera.position.y = 0;\r\n    controls.update();\r\n    var animate = () => {\r\n      stats.begin()\r\n      requestAnimationFrame(animate);\r\n      updatePTS()\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n      stats.end()\r\n    };\r\n    animate();\r\n    return () => {\r\n      geometry.dispose()\r\n      material.dispose()\r\n      renderer.dispose()\r\n    }\r\n  }, [preserveBuffer, particles, grid, camera, dt, params])\r\n\r\n\r\n  const updateParticleCount = (event) => {\r\n    setParticles(event.target.value);\r\n  };\r\n  const updateTimeStep = (event) => {\r\n    setDT(event.target.value);\r\n  };\r\n  const updateParams = (event) => {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    setParams({ sigma: Number(f.get('sigma')), beta: Number(f.get('beta')), rho: Number(f.get('rho')) })\r\n  }\r\n  const updateGrid = () => {\r\n    setGridVisibility(!grid.visible);\r\n    grid.visible = !grid.visible\r\n  }\r\n  console.log(params)\r\n  return (\r\n    <div>\r\n      <div id='stats' style={{ height: '48px', width: '80px' }}></div>\r\n      <div id='options' style={{ position: 'absolute', right: '5px', top: '0px' }}>\r\n        <Accordion style={{ width: '500px' }}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n            <Typography>OPTIONS</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Grid container direction='column'>\r\n              <Divider></Divider>\r\n              <Grid item container spacing={2}>\r\n                <Grid item xs={7}>\r\n                  <Typography>\r\n                    Sigma, beta, and rho are parameters for Lorenz equations.\r\n                    Try changing them and click 'update params'!\r\n                  </Typography>\r\n                  <Typography>dx/dt = sigma*(y-x)</Typography>\r\n                  <Typography>dy/dt = x*(rho-z) - y</Typography>\r\n                  <Typography>dz/dt = x*y - beta*z</Typography>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <form onSubmit={updateParams}>\r\n                    <TextField name='sigma' defaultValue={params.sigma} inputProps={{ type: 'number', step: 'any' }} label='SIGMA' />\r\n                    <TextField name='beta' defaultValue={params.beta} inputProps={{ type: 'number', step: 'any' }} label='BETA' />\r\n                    <TextField name='rho' defaultValue={params.rho} inputProps={{ type: 'number', step: 'any' }} label='RHO' />\r\n                    <Button fullWidth type='submit'>UPDATE PARAMS</Button>\r\n                  </form>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider></Divider>\r\n\r\n              <Grid item>\r\n                <Grid item container spacing={2}>\r\n                  <Grid item xs={7}>\r\n                    <Typography>Chooses how many particles to render your scene with.\r\n                      If the FPS is low, try setting this to a lower value.</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <FormControl\r\n                      fullWidth\r\n                    >\r\n                      <InputLabel>PARTICLES</InputLabel>\r\n                      <Select\r\n                        value={particles}\r\n                        onChange={updateParticleCount}\r\n                      >\r\n                        <MenuItem value={10000}>10000</MenuItem>\r\n                        <MenuItem value={20000}>20000</MenuItem>\r\n                        <MenuItem value={30000}>30000</MenuItem>\r\n                        <MenuItem value={50000}>50000</MenuItem>\r\n                        <MenuItem value={100000}>100000</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider></Divider>\r\n\r\n              <Grid item>\r\n                <Grid item container spacing={2}>\r\n                  <Grid item xs={7}>\r\n                    <Typography>Chooses what dt is set to for Lorenz equations.\r\n                      If FPS is low, try setting this to a higher value.</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <FormControl\r\n                      fullWidth\r\n                    >\r\n                      <InputLabel>TIMESTEP</InputLabel>\r\n                      <Select\r\n                        value={dt}\r\n                        onChange={updateTimeStep}\r\n                      >\r\n                        <MenuItem value={.000625}>.000625</MenuItem>\r\n                        <MenuItem value={.00125}>.00125</MenuItem>\r\n                        <MenuItem value={.0025}>.005</MenuItem>\r\n                        <MenuItem value={.005}>.05</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider></Divider>\r\n\r\n              <Grid item>\r\n                <Grid item container spacing={2}>\r\n                  <Grid item xs={7}>\r\n                    <Typography>Sets whether old pixels are cleared before the next frame is drawn.</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <FormControlLabel\r\n                      control={<Switch checked={preserveBuffer} onChange={() => setPreserveBuffer(!preserveBuffer)}></Switch>}\r\n                      label={<Typography style={{ fontSize: '.875rem' }}>KEEP BUFFER</Typography>}\r\n                      labelPlacement='start'\r\n                    />\r\n                    {/* <Button fullWidth onClick={() => setPreserveBuffer(!preserveBuffer)}>Keep Buffer</Button> */}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider></Divider>\r\n\r\n              <Grid item>\r\n                <Grid item container spacing={2}>\r\n                  <Grid item xs={7}>\r\n                    <Typography>Toggles visibility of gridlines.</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <FormControlLabel\r\n                      control={<Switch checked={gridVisibility} onChange={updateGrid}></Switch>}\r\n                      label={<Typography style={{ fontSize: '.875rem' }}>TOGGLE GRID</Typography>}\r\n                      labelPlacement='start'\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider></Divider>\r\n\r\n              <Grid item>\r\n                <Grid item container spacing={2}>\r\n                  <Grid item xs={7}>\r\n                    <Typography>Resets the camera position/rotation.</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <Button fullWidth onClick={() => camera.position.set(0, 0, 75)}>Zero Camera</Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}