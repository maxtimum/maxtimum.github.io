{"version":3,"sources":["components/homepage/Homepage.js","components/projects/attractors/Lorenz.js","components/projects/attractors/Thomas.js","components/projects/attractors/Aizawa.js","components/projects/attractors/Dadras.js","components/projects/attractors/Chen.js","components/projects/attractors/Attractors.js","index.js"],"names":["Spacer","Grid","item","xs","style","minHeight","backgroundColor","Homepage","theme","createMuiTheme","typography","body1","fontFamily","fontSize","subtitle1","h3","h4","h6","ThemeProvider","container","direction","spacing","width","position","left","paddingTop","paddingBottom","justify","textAlign","background","Typography","variant","title","company","date","map","x","tech","info","link","p","useState","infoPanel","setInfoPanel","techUsed","join","linkOrNothing","to","target","textDecoration","className","onClick","Collapse","in","opacity","i","Project","href","color","updateParams","event","preventDefault","f","FormData","res","sigma","Number","get","beta","rho","document","dispatchEvent","CustomEvent","detail","idx","Lorenz","params","dt","this","defaultCam","y","z","positions","length","_x","_y","_z","dx","dy","dz","Link","rel","onSubmit","TextField","name","defaultValue","inputProps","type","step","label","Button","fullWidth","b","Thomas","Math","sin","a","c","d","e","Aizawa","pow","Dadras","alpha","delta","Chen","Attractors","gridVisibility","setGridVisibility","preserveBuffer","setPreserveBuffer","options","setOptionsOpen","THREE","window","innerWidth","innerHeight","camera","grid","particles","setParticles","setDT","attractors","attractor","setAttractor","useEffect","scene","visible","add","renderer","preserveDrawingBuffer","antialias","autoClearColor","setSize","body","appendChild","domElement","controls","OrbitControls","addEventListener","clear","aspect","updateProjectionMatrix","geometry","colors","random","setRGB","abs","constructor","push","r","g","setAttribute","material","size","vertexColors","points","light","update","animate","requestAnimationFrame","updatePTS","attributes","array","needsUpdate","render","dispose","id","right","top","Paper","IconButton","Slide","mountOnEnter","unmountOnExit","overflowY","padding","marginBottom","FormControl","InputLabel","Select","value","onChange","MenuItem","getInfoPanel","Divider","marginTop","min","FormControlLabel","control","Switch","checked","labelPlacement","set","ReactDOM","basename","exact","path","getElementById"],"mappings":"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","file":"static/js/main.b7f3dac4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Grid, Collapse, Typography, Link as HLink } from '@material-ui/core'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\r\nfunction Homepage() {\r\n    const projects = [\r\n        {\r\n            title: 'cicd pipeline', tech: ['Node.js', 'Express', 'SQL', 'Python'],\r\n            info: [\r\n                'capstone project w/team of four',\r\n                'user defines multistage CI/CD pipeline for their repository',\r\n                'integrated w/GitHub for automatic execution of pipeline on changes'\r\n            ]\r\n        },\r\n        {\r\n            title: 'strange attractors', tech: ['React', 'three.js'],\r\n            info: [\r\n                'particle simulation of the chaotic behaviour seen in strange attractors'\r\n            ]\r\n            , link: '/p/strange-attractors'\r\n        },\r\n        {\r\n            title: 'covid19 impact', tech: ['SQL', 'Power BI'],\r\n            info: [\r\n                'wrote queries & reports to analyze, predict, and visualize covid19 impact on CHCW appointments'\r\n            ]\r\n        }\r\n    ]\r\n    const work = [\r\n        {\r\n            title: 'software engineer',\r\n            company: 'us cellular',\r\n            date: 'jun 2021 → current'\r\n        },\r\n        {\r\n            title: 'cs/math tutor',\r\n            company: 'bellevue college',\r\n            date: 'sep 2020 → jun 2021'\r\n        },\r\n        {\r\n            title: 'analytics intern',\r\n            company: 'community health of central wa',\r\n            date: 'jun 2020 → sep 2020'\r\n        }\r\n    ]\r\n    const theme = createMuiTheme({\r\n        typography: {\r\n            body1: {\r\n                fontFamily: ['HKGroteskLight'],\r\n                fontSize: 'clamp(100%, 2vw, 18px);'\r\n            },\r\n            subtitle1: {\r\n                fontFamily: ['HKGroteskExtraLightItalic']\r\n            },\r\n            h3: {\r\n                fontFamily: ['HKGroteskSemiBold'],\r\n                fontSize: 'clamp(100%, 12vw, 56px)'\r\n            },\r\n            h4: {\r\n                fontFamily: ['HKGroteskSemiBold'],\r\n                fontSize: 'clamp(28px, 6vw, 40px)'\r\n            },\r\n            h6: {\r\n                fontFamily: ['HKGroteskRegular']\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Grid container direction='row' spacing={0}\r\n                style={{\r\n                    width: '70%', position: 'absolute', left: '15%',\r\n                    paddingTop: '2em', paddingBottom: '2em'\r\n                }}\r\n            >\r\n                {/* content here */}\r\n                <Grid item container direction='column' justify='center' xs={12}>\r\n                    {/* name / work, always visible */}\r\n                    <Grid item style={{ textAlign: 'right', background: 'linear-gradient(90deg, #5421d4, #1a1a1a)' }}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h3' >Max Peters</Typography>\r\n                            {work.map((x) => {\r\n                                return (\r\n                                    <>\r\n                                        <Typography variant='h4' >{x.title}</Typography>\r\n                                        <Typography variant='subtitle1'>{x.company}</Typography>\r\n                                        <Typography variant='subtitle1'>{x.date}</Typography>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                    {Spacer()}\r\n                    {/* projects & circle svg */}\r\n                    <Grid item xs={12} container style={{ background: 'linear-gradient(270deg, #fa9ca8, #1a1a1a)' }}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' >projects</Typography>\r\n                        </Grid>\r\n                        {projects.map((p) => {\r\n                            return (\r\n                                Project(p)\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                    {Spacer()}\r\n                    {/* contact info */}\r\n                    <Grid item container style={{ textAlign: 'right', background: 'linear-gradient(90deg, #1213f2 , #1a1a1a)' }}>\r\n                        <Grid item container xs={12}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant='h4'>contact</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant='body1'>\r\n                                    <HLink href='https://www.linkedin.com/in/maxtimum/' target='_blank' style={{ color: '#fff' }}>linkedin</HLink>\r\n                                </Typography>\r\n                                <Typography variant='body1'>\r\n                                    <HLink href='mailto:max.0peters1@gmail.com' target='_blank' style={{ color: '#fff' }}>email</HLink>\r\n                                </Typography>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider >\r\n    )\r\n}\r\nfunction Spacer() {\r\n    return (\r\n        <Grid item xs={12} style={{ minHeight: '5vh', backgroundColor: '#1a1a1a' }}>\r\n        </Grid>\r\n    )\r\n\r\n}\r\nfunction Project(p) {\r\n    const [infoPanel, setInfoPanel] = useState(false)\r\n    const techUsed = (<Typography variant='subtitle1'>{p.tech.join(' · ')}</Typography>)\r\n    const linkOrNothing = p.link ? <Link to={p.link} target='_blank' style={{ textDecoration: 'none' }}>🡥</Link> : ''\r\n    return (\r\n        <Grid item xs={12} >\r\n            {p.info[0] ?\r\n                <>\r\n                    <Typography className='is-dropdown' variant='h6' onClick={() => setInfoPanel(!infoPanel)}>\r\n                        {p.title} 🛈 {linkOrNothing}\r\n                    </Typography>\r\n                    {techUsed}\r\n                    <Collapse in={infoPanel} style={{ backgroundColor: '#000000', opacity: '75%' }}>\r\n                        {p.info.map((i) => {\r\n                            return (\r\n                                <Typography variant='body1'>\r\n                                    • {i}\r\n                                </Typography>\r\n                            )\r\n                        })}\r\n                    </Collapse>\r\n                </>\r\n                :\r\n                <>\r\n                    <Typography variant='h6'>{p.title} {linkOrNothing}</Typography>\r\n                    {techUsed}\r\n                </>\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\nexport default Homepage;","import { Grid, Typography, Link, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = { sigma: Number(f.get('lorenz_sigma')), beta: Number(f.get('lorenz_beta')), rho: Number(f.get('lorenz_rho')) }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 0, p: res } }))\r\n}\r\nexport default class Lorenz {\r\n    constructor(params = { sigma: 10, rho: 28, beta: 8.0 / 3.0 }, dt = .00125) {\r\n        this.idx = 0\r\n        this.params = params\r\n        this.dt = dt\r\n        this.defaultCam = { x: 0, y: 0, z: 50 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = (this.params.sigma * (_y - _x)) * this.dt;\r\n            const dy = ((_x * (this.params.rho - _z)) - _y) * this.dt\r\n            const dz = ((_x * _y) - (this.params.beta * _z)) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>Sigma, beta, and rho are parameters for the Lorenz attractor ({<Link href='https://en.wikipedia.org/wiki/Lorenz_system' target='_blank' rel=\"noreferrer\">Wikipedia</Link>})</Typography>\r\n                <Typography>Try changing them and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = sigma*(y-x)</Typography>\r\n                <Typography>dy/dt = x*(rho-z) - y</Typography>\r\n                <Typography>dz/dt = x*y - beta*z</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='lorenz_sigma' defaultValue={this.params.sigma} inputProps={{ type: 'number', step: 'any' }} label='SIGMA' />\r\n                    <TextField name='lorenz_beta' defaultValue={this.params.beta} inputProps={{ type: 'number', step: 'any' }} label='BETA' />\r\n                    <TextField name='lorenz_rho' defaultValue={this.params.rho} inputProps={{ type: 'number', step: 'any' }} label='RHO' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Typography, Link, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = { b: Number(f.get('thomas_b')) }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 1, p: res } }))\r\n}\r\nexport default class Thomas {\r\n    constructor(params = { b: .208186 }, dt = .00125) {\r\n        this.idx = 1\r\n        this.params = params\r\n        this.dt = 10 * dt\r\n        this.defaultCam = { x: 0, y: 0, z: 30 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = (Math.sin(_y) - (this.params.b * _x)) * this.dt;\r\n            const dy = (Math.sin(_z) - (this.params.b * _y)) * this.dt\r\n            const dz = (Math.sin(_x) - (this.params.b * _z)) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>B is the only parameter for the Thomas cyclically symmetric attractor ({<Link href='https://en.wikipedia.org/wiki/Thomas%27_cyclically_symmetric_attractor' target='_blank' rel=\"noreferrer\">Wikipedia</Link>})</Typography>\r\n                <Typography>Try changing it and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = sin(y) - b*x</Typography>\r\n                <Typography>dy/dt = sin(z) - b*y</Typography>\r\n                <Typography>dz/dt = sin(x) - b*z</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='thomas_b' defaultValue={this.params.b} inputProps={{ type: 'number', step: 'any' }} label='B' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Typography, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = {\r\n        a: Number(f.get('aizawa_a')), b: Number(f.get('aizawa_b')), c: Number(f.get('aizawa_c')),\r\n        d: Number(f.get('aizawa_d')), e: Number(f.get('aizawa_e')), f: Number(f.get('aizawa_f'))\r\n    }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 2, p: res } }))\r\n}\r\nexport default class Aizawa {\r\n    constructor(params = { a: 0.95, b: 0.7, c: 0.6, d: 3.5, e: 0.25, f: 0.1 }, dt = .00125) {\r\n        this.idx = 2\r\n        this.params = params\r\n        this.dt = dt\r\n        this.defaultCam = { x: 0, y: 0, z: 15 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = ((_z - this.params.b) * _x - this.params.d * _y) * this.dt;\r\n            const dy = (this.params.d * _x + (_z - this.params.b) * _y) * this.dt\r\n            const dz_0 = this.params.c + (this.params.a * _z) - (Math.pow(_z, 3) / 3.0)\r\n            const dz_1 = ((_x * _x) + (_y * _y)) * (1 + (this.params.e * _z))\r\n            const dz_2 = this.params.f * _z * Math.pow(_x, 3)\r\n            const dz = (dz_0 - dz_1 + dz_2) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>The Aizawa attractor has 6 parameters and makes a nice circular pattern. It is a little slow to start!</Typography>\r\n                <Typography>Try changing them and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = (z-b)*x - d*y</Typography>\r\n                <Typography>dy/dt = d*x + (z-b)*y</Typography>\r\n                <Typography>dz/dt = c + a*z - z^3/3 - (x^2 + y^2)*(1 + e*z) + f*z*x^3</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='aizawa_a' defaultValue={this.params.a} inputProps={{ type: 'number', step: 'any' }} label='A' />\r\n                    <TextField name='aizawa_b' defaultValue={this.params.b} inputProps={{ type: 'number', step: 'any' }} label='B' />\r\n                    <TextField name='aizawa_c' defaultValue={this.params.c} inputProps={{ type: 'number', step: 'any' }} label='C' />\r\n                    <TextField name='aizawa_d' defaultValue={this.params.d} inputProps={{ type: 'number', step: 'any' }} label='D' />\r\n                    <TextField name='aizawa_e' defaultValue={this.params.e} inputProps={{ type: 'number', step: 'any' }} label='E' />\r\n                    <TextField name='aizawa_f' defaultValue={this.params.f} inputProps={{ type: 'number', step: 'any' }} label='F' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Typography, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = {\r\n        a: Number(f.get('dadras_a')), b: Number(f.get('dadras_b')), c: Number(f.get('dadras_c')),\r\n        d: Number(f.get('dadras_d')), e: Number(f.get('dadras_e'))\r\n    }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 3, p: res } }))\r\n}\r\nexport default class Dadras {\r\n    constructor(params = { a: 3, b: 2.7, c: 1.7, d: 2, e: 9 }, dt = .00125) {\r\n        this.idx = 3\r\n        this.params = params\r\n        this.dt = dt\r\n        this.defaultCam = { x: 0, y: 0, z: 50 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = (_y - (this.params.a * _x) + (this.params.b * _y * _z)) * this.dt;\r\n            const dy = ((this.params.c * _y) - (_x * _z) + _z) * this.dt\r\n            const dz = ((this.params.d * _x * _y) - (this.params.e * _z)) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>The Dadras attractor has 5 parameters, a-e! It is quite energetic and very pretty.</Typography>\r\n                <Typography>Try changing them and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = y - a*x  + b*y*z</Typography>\r\n                <Typography>dy/dt = c*y - x*z + z</Typography>\r\n                <Typography>dz/dt = d*x*y - e*z</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='dadras_a' defaultValue={this.params.a} inputProps={{ type: 'number', step: 'any' }} label='A' />\r\n                    <TextField name='dadras_b' defaultValue={this.params.b} inputProps={{ type: 'number', step: 'any' }} label='B' />\r\n                    <TextField name='dadras_c' defaultValue={this.params.c} inputProps={{ type: 'number', step: 'any' }} label='C' />\r\n                    <TextField name='dadras_d' defaultValue={this.params.d} inputProps={{ type: 'number', step: 'any' }} label='D' />\r\n                    <TextField name='dadras_e' defaultValue={this.params.e} inputProps={{ type: 'number', step: 'any' }} label='E' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Typography, Link, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = { alpha: Number(f.get('chen_alpha')), beta: Number(f.get('chen_beta')), delta: Number(f.get('chen_delta')) }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 4, p: res } }))\r\n}\r\nexport default class Chen {\r\n    constructor(params = { alpha: 5, beta: -10, delta: -.38 }, dt = .00125) {\r\n        this.idx = 4\r\n        this.params = params\r\n        this.dt = dt\r\n        this.defaultCam = { x: 0, y: 0, z: 50 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = ((this.params.alpha * _x) - (_y * _z)) * this.dt;\r\n            const dy = ((this.params.beta * _y) + (_x * _z)) * this.dt\r\n            const dz = ((this.params.delta * _z) + (_x * _y / 3.0)) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>The Chen attractor is a double scroll chaotic attractor, which were first observed electronic circuits with nonlinear resitors({<Link href='https://en.wikipedia.org/wiki/Multiscroll_attractor#Lu_Chen_attractor' target='_blank' rel=\"noreferrer\">Wikipedia</Link>})</Typography>\r\n                <Typography>Try changing them and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = sigma*(y-x)</Typography>\r\n                <Typography>dy/dt = x*(rho-z) - y</Typography>\r\n                <Typography>dz/dt = x*y - beta*z</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='chen_alpha' defaultValue={this.params.alpha} inputProps={{ type: 'number', step: 'any' }} label='ALPHA' />\r\n                    <TextField name='chen_beta' defaultValue={this.params.beta} inputProps={{ type: 'number', step: 'any' }} label='BETA' />\r\n                    <TextField name='chen_delta' defaultValue={this.params.delta} inputProps={{ type: 'number', step: 'any' }} label='DELTA' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nimport {\r\n    Button, Select, MenuItem, FormControl, InputLabel, Grid, Slide, Typography,\r\n    Switch, Divider, FormControlLabel, IconButton, Paper, TextField\r\n} from '@material-ui/core'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\n\r\nimport Lorenz from './Lorenz';\r\nimport Thomas from './Thomas';\r\nimport Aizawa from './Aizawa';\r\nimport Dadras from './Dadras';\r\nimport Chen from './Chen';\r\n\r\nfunction Attractors() {\r\n    document.title = \"~/p/strange-attractors\"\r\n    const [gridVisibility, setGridVisibility] = useState(false)\r\n    const [preserveBuffer, setPreserveBuffer] = useState(false)\r\n    const [options, setOptionsOpen] = useState()\r\n\r\n    // eslint-disable-next-line\r\n    const [camera, setCamera] = useState(new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000))\r\n    // eslint-disable-next-line\r\n    const [grid, setGrid] = useState(new THREE.GridHelper(150, 150))\r\n\r\n    const [particles, setParticles] = useState(20000)\r\n    const [dt, setDT] = useState(.00125)\r\n\r\n    const attractors = [new Lorenz(), new Thomas(), new Aizawa(), new Dadras(), new Chen()]\r\n    const [attractor, setAttractor] = useState(attractors[0])\r\n\r\n    useEffect(() => {\r\n        setOptionsOpen(false)\r\n        const scene = new THREE.Scene();\r\n        grid.visible = false;\r\n        scene.add(grid);\r\n        const renderer = new THREE.WebGLRenderer({ preserveDrawingBuffer: preserveBuffer, antialias: true })\r\n        renderer.autoClearColor = !preserveBuffer;\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        document.body.appendChild(renderer.domElement);\r\n\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.addEventListener('change', () => { renderer.clear() })\r\n\r\n        const resizeWindow = () => {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n        }\r\n        window.addEventListener('resize', resizeWindow());\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        const color = new THREE.Color();\r\n        const positions = [];\r\n        const colors = [];\r\n        for (let i = 0; i < particles; i++) {\r\n            let x = (Math.random() * 25) - 25;\r\n            let y = (Math.random() * 25) - 25;\r\n            let z = (Math.random() * 25) - 25;\r\n            color.setRGB(Math.abs(x / 25), Math.abs(y / 25), Math.abs(z / 25));\r\n            if (attractor.constructor.name === 'Aizawa') {\r\n                // really doesn't enjoy z < 0; sort of a hacky fix\r\n                x = (Math.random() * 5) - 5;\r\n                y = (Math.random() * 5) - 5;\r\n                z = (Math.random() * 5);\r\n                color.setRGB(Math.abs(x / 5), Math.abs(y / 5), Math.abs(z / 5));\r\n            }\r\n            positions.push(x, y, z)\r\n            colors.push(color.r, color.g, color.b);\r\n        }\r\n\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n        geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\r\n        const material = new THREE.PointsMaterial({ size: .15, vertexColors: true });\r\n        const points = new THREE.Points(geometry, material);\r\n        scene.add(points);\r\n\r\n        const light = new THREE.AmbientLight(0xffffff, 100);\r\n        scene.add(light);\r\n        camera.position.x = attractor.defaultCam.x;\r\n        camera.position.y = attractor.defaultCam.y;\r\n        camera.position.z = attractor.defaultCam.z;\r\n        controls.update();\r\n        var animate = () => {\r\n            requestAnimationFrame(animate);\r\n            attractor.updatePTS(points.geometry.attributes.position.array)\r\n            points.geometry.attributes.position.needsUpdate = true;\r\n            // console.log(camera.position)\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        };\r\n        animate();\r\n        return () => {\r\n            geometry.dispose()\r\n            material.dispose()\r\n            renderer.dispose()\r\n        }\r\n    }, [preserveBuffer, particles, grid, camera, dt, attractor])\r\n\r\n    document.addEventListener('attractor_updated', (e) => {\r\n        const idx = e.detail.idx\r\n        const p = e.detail.p\r\n        if (idx === 0) {\r\n            attractors[0] = new Lorenz(p, dt)\r\n            setAttractor(attractors[0])\r\n        } else if (idx === 1) {\r\n            attractors[1] = new Thomas(p, dt)\r\n            setAttractor(attractors[1])\r\n        } else if (idx === 2) {\r\n            attractors[2] = new Aizawa(p, dt)\r\n            setAttractor(attractors[2])\r\n        } else if (idx === 3) {\r\n            attractors[3] = new Dadras(p, dt)\r\n            setAttractor(attractors[3])\r\n        } else if (idx === 4) {\r\n            attractors[4] = new Chen(p, dt)\r\n            setAttractor(attractors[4])\r\n        }\r\n    })\r\n\r\n    const updateAttractor = (e) => {\r\n        setAttractor(attractors[e.target.value])\r\n    }\r\n    const updateParticleCount = (event) => {\r\n        event.preventDefault()\r\n        const f = new FormData(event.target)\r\n        setParticles(Number(f.get('particles')))\r\n    };\r\n    const updateTimeStep = (event) => {\r\n        setDT(event.target.value);\r\n    };\r\n    const updateGrid = () => {\r\n        setGridVisibility(!grid.visible);\r\n        grid.visible = !grid.visible\r\n    }\r\n    return (\r\n        <div>\r\n            <div id='options' style={{ position: 'absolute', right: '0px', top: '0px' }}>\r\n                <Paper style={{ position: 'absolute', right: '0px', top: '0px' }}>\r\n                    <IconButton onClick={() => setOptionsOpen(!options)}>\r\n                        {options ? <><ChevronRightIcon /><SettingsIcon /></> : <><ChevronLeftIcon /><SettingsIcon /></>}\r\n                    </IconButton>\r\n                </Paper>\r\n                <Slide direction='left' in={options} mountOnEnter unmountOnExit>\r\n                    <Paper style={{ position: 'absolute', top: '52px', right: '0px', width: '500px', overflowY: 'scroll' }}>\r\n                        <Grid container direction='column' style={{ padding: '.85rem' }}>\r\n                            <Grid item xs={12} style={{ marginBottom: '4px' }}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel>ATTRACTOR</InputLabel>\r\n                                    <Select\r\n                                        value={attractor.idx}\r\n                                        onChange={updateAttractor}\r\n                                    >\r\n                                        <MenuItem value={0}>LORENZ</MenuItem>\r\n                                        <MenuItem value={1}>THOMAS</MenuItem>\r\n                                        <MenuItem value={2}>AIZAWA</MenuItem>\r\n                                        <MenuItem value={3}>DADRAS</MenuItem>\r\n                                        <MenuItem value={4}>CHEN</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item container spacing={1}>\r\n                                {attractor.getInfoPanel()}\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Chooses how many particles to render your scene with.\r\n                                            If the FPS is low, try setting this to a lower value.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <form onSubmit={updateParticleCount}>\r\n                                            <TextField name='particles' defaultValue={particles} inputProps={{ type: 'number', step: 'any', min: '1' }} label='PARTICLE COUNT' />\r\n                                            <Button fullWidth type='submit'>UPDATE</Button>\r\n                                        </form>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Chooses what dt is set to for the equations.\r\n                                            If FPS is low, try setting this to a&nbsp;higher value.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <FormControl\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel>TIMESTEP</InputLabel>\r\n                                            <Select\r\n                                                value={dt}\r\n                                                onChange={updateTimeStep}\r\n                                            >\r\n                                                <MenuItem value={.000625}>.000625</MenuItem>\r\n                                                <MenuItem value={.00125}>.00125</MenuItem>\r\n                                                <MenuItem value={.0025}>.005</MenuItem>\r\n                                                <MenuItem value={.005}>.05</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Sets whether old pixels are cleared before the next frame is drawn.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <FormControlLabel\r\n                                            control={<Switch checked={preserveBuffer} onChange={() => setPreserveBuffer(!preserveBuffer)}></Switch>}\r\n                                            label={<Typography style={{ fontSize: '.875rem' }}>TOGGLE BUFFER</Typography>}\r\n                                            labelPlacement='start'\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Toggles visibility of gridlines.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <FormControlLabel\r\n                                            control={<Switch checked={gridVisibility} onChange={updateGrid}></Switch>}\r\n                                            label={<Typography style={{ fontSize: '.875rem' }}>TOGGLE GRID</Typography>}\r\n                                            labelPlacement='start'\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Resets the camera position/rotation.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Button fullWidth onClick={() => camera.position.set(attractor.defaultCam.x, attractor.defaultCam.y, attractor.defaultCam.z)}>Zero Camera</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Slide>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Attractors;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nimport Homepage from './components/homepage/Homepage';\r\nimport Attractors from './components/projects/attractors/Attractors';\r\n\r\nReactDOM.render(\r\n    <HashRouter basename='/'>\r\n        <Switch>\r\n            <Route exact path='/p/strange-attractors'>\r\n                <Attractors />\r\n            </Route>\r\n            <Route exact path='/'>\r\n                <Homepage />\r\n            </Route>\r\n        </Switch>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}