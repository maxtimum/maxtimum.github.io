{"version":3,"sources":["components/projects/attractors/Lorenz.js","components/projects/attractors/Thomas.js","components/projects/attractors/Aizawa.js","components/projects/attractors/Dadras.js","components/projects/attractors/Chen.js","components/projects/attractors/Attractors.js","index.js"],"names":["updateParams","event","preventDefault","f","FormData","target","res","sigma","Number","get","beta","rho","document","dispatchEvent","CustomEvent","detail","idx","p","Lorenz","params","dt","this","defaultCam","x","y","z","positions","i","length","_x","_y","_z","dx","dy","dz","Grid","item","xs","Typography","Link","href","rel","onSubmit","TextField","name","defaultValue","inputProps","type","step","label","Button","fullWidth","b","Thomas","Math","sin","a","c","d","e","Aizawa","pow","Dadras","alpha","delta","Chen","Attractors","title","useState","gridVisibility","setGridVisibility","preserveBuffer","setPreserveBuffer","THREE","window","innerWidth","innerHeight","camera","grid","particles","setParticles","setDT","attractors","attractor","setAttractor","useEffect","scene","visible","add","renderer","preserveDrawingBuffer","antialias","autoClearColor","setSize","body","appendChild","domElement","controls","OrbitControls","addEventListener","clear","aspect","updateProjectionMatrix","geometry","color","colors","random","setRGB","abs","constructor","push","r","g","setAttribute","material","size","vertexColors","points","light","position","update","animate","requestAnimationFrame","updatePTS","attributes","array","needsUpdate","render","dispose","options","setOptionsOpen","id","style","right","top","Paper","IconButton","onClick","Slide","direction","in","mountOnEnter","unmountOnExit","width","overflow","container","padding","marginBottom","FormControl","InputLabel","Select","value","onChange","MenuItem","spacing","getInfoPanel","Divider","marginTop","min","FormControlLabel","control","Switch","checked","fontSize","labelPlacement","set","ReactDOM","exact","path","getElementById"],"mappings":"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","file":"static/js/main.8a50dd69.chunk.js","sourcesContent":["import { Grid, Typography, Link, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = { sigma: Number(f.get('sigma')), beta: Number(f.get('beta')), rho: Number(f.get('rho')) }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 0, p: res } }))\r\n}\r\nexport default class Lorenz {\r\n    constructor(params = { sigma: 10, rho: 28, beta: 8.0 / 3.0 }, dt = .00125) {\r\n        this.idx = 0\r\n        this.params = params\r\n        this.dt = dt\r\n        this.defaultCam = { x: 0, y: 0, z: 50 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = (this.params.sigma * (_y - _x)) * this.dt;\r\n            const dy = ((_x * (this.params.rho - _z)) - _y) * this.dt\r\n            const dz = ((_x * _y) - (this.params.beta * _z)) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>Sigma, beta, and rho are parameters for the Lorenz attractor ({<Link href='https://en.wikipedia.org/wiki/Lorenz_system' target='_blank' rel=\"noreferrer\">Wikipedia</Link>})</Typography>\r\n                <Typography>Try changing them and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = sigma*(y-x)</Typography>\r\n                <Typography>dy/dt = x*(rho-z) - y</Typography>\r\n                <Typography>dz/dt = x*y - beta*z</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='sigma' defaultValue={this.params.sigma} inputProps={{ type: 'number', step: 'any' }} label='SIGMA' />\r\n                    <TextField name='beta' defaultValue={this.params.beta} inputProps={{ type: 'number', step: 'any' }} label='BETA' />\r\n                    <TextField name='rho' defaultValue={this.params.rho} inputProps={{ type: 'number', step: 'any' }} label='RHO' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Typography, Link, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = { b: Number(f.get('b')) }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 1, p: res } }))\r\n}\r\nexport default class Thomas {\r\n    constructor(params = { b: .208186 }, dt = .00125) {\r\n        this.idx = 1\r\n        this.params = params\r\n        this.dt = 10 * dt\r\n        this.defaultCam = { x: 0, y: 0, z: 30 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = (Math.sin(_y) - (this.params.b * _x)) * this.dt;\r\n            const dy = (Math.sin(_z) - (this.params.b * _y)) * this.dt\r\n            const dz = (Math.sin(_x) - (this.params.b * _z)) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>B is the only parameter for the Thomas cyclically symmetric attractor ({<Link href='https://en.wikipedia.org/wiki/Thomas%27_cyclically_symmetric_attractor' target='_blank' rel=\"noreferrer\">Wikipedia</Link>})</Typography>\r\n                <Typography>Try changing it and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = sin(y) - b*x</Typography>\r\n                <Typography>dy/dt = sin(z) - b*y</Typography>\r\n                <Typography>dz/dt = sin(x) - b*z</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='b' defaultValue={this.params.b} inputProps={{ type: 'number', step: 'any' }} label='B' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Typography, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = {\r\n        a: Number(f.get('a')), b: Number(f.get('b')), c: Number(f.get('c')),\r\n        d: Number(f.get('d')), e: Number(f.get('e')), f: Number(f.get('f'))\r\n    }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 2, p: res } }))\r\n}\r\nexport default class Aizawa {\r\n    constructor(params = { a: 0.95, b: 0.7, c: 0.6, d: 3.5, e: 0.25, f: 0.1 }, dt = .00125) {\r\n        this.idx = 2\r\n        this.params = params\r\n        this.dt = dt\r\n        this.defaultCam = { x: 0, y: 0, z: 15 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = ((_z - this.params.b) * _x - this.params.d * _y) * this.dt;\r\n            const dy = (this.params.d * _x + (_z - this.params.b) * _y) * this.dt\r\n            const dz_0 = this.params.c + (this.params.a * _z) - (Math.pow(_z, 3) / 3.0)\r\n            const dz_1 = ((_x * _x) + (_y * _y)) * (1 + (this.params.e * _z))\r\n            const dz_2 = this.params.f * _z * Math.pow(_x, 3)\r\n            const dz = (dz_0 - dz_1 + dz_2) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>The Aizawa attractor has 6 parameters and makes a nice circular pattern. It is a little slow to start!</Typography>\r\n                <Typography>Try changing them and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = (z-b)*x - d*y</Typography>\r\n                <Typography>dy/dt = d*x + (z-b)*y</Typography>\r\n                <Typography>dz/dt = c + a*z - z^3/3 - (x^2 + y^2)*(1 + e*z) + f*z*x^3</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='a' defaultValue={this.params.a} inputProps={{ type: 'number', step: 'any' }} label='A' />\r\n                    <TextField name='b' defaultValue={this.params.b} inputProps={{ type: 'number', step: 'any' }} label='B' />\r\n                    <TextField name='c' defaultValue={this.params.c} inputProps={{ type: 'number', step: 'any' }} label='C' />\r\n                    <TextField name='d' defaultValue={this.params.d} inputProps={{ type: 'number', step: 'any' }} label='D' />\r\n                    <TextField name='e' defaultValue={this.params.e} inputProps={{ type: 'number', step: 'any' }} label='E' />\r\n                    <TextField name='f' defaultValue={this.params.f} inputProps={{ type: 'number', step: 'any' }} label='F' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Typography, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = {\r\n        a: Number(f.get('a')), b: Number(f.get('b')), c: Number(f.get('c')),\r\n        d: Number(f.get('d')), e: Number(f.get('e'))\r\n    }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 3, p: res } }))\r\n}\r\nexport default class Dadras {\r\n    constructor(params = { a: 3, b: 2.7, c: 1.7, d: 2, e: 9 }, dt = .00125) {\r\n        this.idx = 3\r\n        this.params = params\r\n        this.dt = dt\r\n        this.defaultCam = { x: 0, y: 0, z: 50 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = (_y - (this.params.a * _x) + (this.params.b * _y * _z)) * this.dt;\r\n            const dy = ((this.params.c * _y) - (_x * _z) + _z) * this.dt\r\n            const dz = ((this.params.d * _x * _y) - (this.params.e * _z)) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>The Dadras attractor has 5 parameters, a-e! It is quite energetic and very pretty.</Typography>\r\n                <Typography>Try changing them and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = y - a*x  + b*y*z</Typography>\r\n                <Typography>dy/dt = c*y - x*z + z</Typography>\r\n                <Typography>dz/dt = d*x*y - e*z</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='a' defaultValue={this.params.a} inputProps={{ type: 'number', step: 'any' }} label='A' />\r\n                    <TextField name='b' defaultValue={this.params.b} inputProps={{ type: 'number', step: 'any' }} label='B' />\r\n                    <TextField name='c' defaultValue={this.params.c} inputProps={{ type: 'number', step: 'any' }} label='C' />\r\n                    <TextField name='d' defaultValue={this.params.d} inputProps={{ type: 'number', step: 'any' }} label='D' />\r\n                    <TextField name='e' defaultValue={this.params.e} inputProps={{ type: 'number', step: 'any' }} label='E' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Typography, Link, TextField, Button } from \"@material-ui/core\"\r\nfunction updateParams(event) {\r\n    event.preventDefault()\r\n    const f = new FormData(event.target)\r\n    const res = { alpha: Number(f.get('alpha')), beta: Number(f.get('beta')), delta: Number(f.get('delta')) }\r\n    document.dispatchEvent(new CustomEvent('attractor_updated', { detail: { idx: 4, p: res } }))\r\n}\r\nexport default class Chen {\r\n    constructor(params = { alpha: 5, beta: -10, delta: -.38 }, dt = .00125) {\r\n        this.idx = 4\r\n        this.params = params\r\n        this.dt = dt\r\n        this.defaultCam = { x: 0, y: 0, z: 50 }\r\n    }\r\n    updatePTS(positions) {\r\n        for (let i = 0; i < positions.length; i += 3) {\r\n            const _x = positions[i]\r\n            const _y = positions[i + 1]\r\n            const _z = positions[i + 2]\r\n\r\n            const dx = ((this.params.alpha * _x) - (_y * _z)) * this.dt;\r\n            const dy = ((this.params.beta * _y) + (_x * _z)) * this.dt\r\n            const dz = ((this.params.delta * _z) + (_x * _y / 3.0)) * this.dt\r\n\r\n            positions[i] += dx\r\n            positions[i + 1] += dy\r\n            positions[i + 2] += dz\r\n        }\r\n    }\r\n\r\n    getInfoPanel() {\r\n        return (<>\r\n            <Grid item xs={8}>\r\n                <Typography>The Chen attractor is a double scroll chaotic attractor, which were first observed electronic circuits with nonlinear resitors({<Link href='https://en.wikipedia.org/wiki/Multiscroll_attractor#Lu_Chen_attractor' target='_blank' rel=\"noreferrer\">Wikipedia</Link>})</Typography>\r\n                <Typography>Try changing them and click 'update params' to restart the simulation!</Typography>\r\n                <Typography>dx/dt = sigma*(y-x)</Typography>\r\n                <Typography>dy/dt = x*(rho-z) - y</Typography>\r\n                <Typography>dz/dt = x*y - beta*z</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <form onSubmit={updateParams}>\r\n                    <TextField name='alpha' defaultValue={this.params.alpha} inputProps={{ type: 'number', step: 'any' }} label='ALPHA' />\r\n                    <TextField name='beta' defaultValue={this.params.beta} inputProps={{ type: 'number', step: 'any' }} label='BETA' />\r\n                    <TextField name='delta' defaultValue={this.params.delta} inputProps={{ type: 'number', step: 'any' }} label='DELTA' />\r\n                    <Button fullWidth type='submit'>UPDATE</Button>\r\n                </form>\r\n            </Grid>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nimport {\r\n    Button, Select, MenuItem, FormControl, InputLabel, Grid, Slide, Typography,\r\n    Switch, Divider, FormControlLabel, IconButton, Paper, TextField\r\n} from '@material-ui/core'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\n\r\nimport Lorenz from './Lorenz';\r\nimport Thomas from './Thomas';\r\nimport Aizawa from './Aizawa';\r\nimport Dadras from './Dadras';\r\nimport Chen from './Chen';\r\n\r\nfunction Attractors() {\r\n    document.title = \"~/p/strange-attractors\"\r\n    const [gridVisibility, setGridVisibility] = useState(false)\r\n    const [preserveBuffer, setPreserveBuffer] = useState(false)// eslint-disable-next-line\r\n    const [camera, setCamera] = useState(new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000))// eslint-disable-next-line\r\n    const [grid, setGrid] = useState(new THREE.GridHelper(150, 150))\r\n    const [particles, setParticles] = useState(20000)\r\n    const [dt, setDT] = useState(.00125)\r\n\r\n    const attractors = [new Lorenz(), new Thomas(), new Aizawa(), new Dadras(), new Chen()]\r\n    const [attractor, setAttractor] = useState(attractors[0])\r\n\r\n    useEffect(() => {\r\n        const scene = new THREE.Scene();\r\n        grid.visible = false;\r\n        scene.add(grid);\r\n        const renderer = new THREE.WebGLRenderer({ preserveDrawingBuffer: preserveBuffer, antialias: true })\r\n        renderer.autoClearColor = !preserveBuffer;\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        document.body.appendChild(renderer.domElement);\r\n\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.addEventListener('change', () => { renderer.clear() })\r\n\r\n        const resizeWindow = () => {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n        }\r\n        window.addEventListener('resize', resizeWindow());\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        const color = new THREE.Color();\r\n        const positions = [];\r\n        const colors = [];\r\n        for (let i = 0; i < particles; i++) {\r\n            let x = (Math.random() * 25) - 25;\r\n            let y = (Math.random() * 25) - 25;\r\n            let z = (Math.random() * 25) - 25;\r\n            color.setRGB(Math.abs(x / 25), Math.abs(y / 25), Math.abs(z / 25));\r\n            if (attractor.constructor.name === 'Aizawa') {\r\n                // really doesn't enjoy z < 0; sort of a hacky fix\r\n                x = (Math.random() * 5) - 5;\r\n                y = (Math.random() * 5) - 5;\r\n                z = (Math.random() * 5);\r\n                color.setRGB(Math.abs(x / 5), Math.abs(y / 5), Math.abs(z / 5));\r\n            }\r\n            positions.push(x, y, z)\r\n            colors.push(color.r, color.g, color.b);\r\n        }\r\n\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n        geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\r\n        const material = new THREE.PointsMaterial({ size: .15, vertexColors: true });\r\n        const points = new THREE.Points(geometry, material);\r\n        scene.add(points);\r\n\r\n        const light = new THREE.AmbientLight(0xffffff, 100);\r\n        scene.add(light);\r\n        camera.position.x = attractor.defaultCam.x;\r\n        camera.position.y = attractor.defaultCam.y;\r\n        camera.position.z = attractor.defaultCam.z;\r\n        controls.update();\r\n        var animate = () => {\r\n            requestAnimationFrame(animate);\r\n            attractor.updatePTS(points.geometry.attributes.position.array)\r\n            points.geometry.attributes.position.needsUpdate = true;\r\n            // console.log(camera.position)\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        };\r\n        animate();\r\n        return () => {\r\n            geometry.dispose()\r\n            material.dispose()\r\n            renderer.dispose()\r\n        }\r\n    }, [preserveBuffer, particles, grid, camera, dt, attractor])\r\n\r\n    document.addEventListener('attractor_updated', (e) => {\r\n        const idx = e.detail.idx\r\n        const p = e.detail.p\r\n        if (idx === 0) {\r\n            attractors[0] = new Lorenz(p, dt)\r\n            setAttractor(attractors[0])\r\n        } else if (idx === 1) {\r\n            attractors[1] = new Thomas(p, dt)\r\n            setAttractor(attractors[1])\r\n        } else if (idx === 2) {\r\n            attractors[2] = new Aizawa(p, dt)\r\n            setAttractor(attractors[2])\r\n        } else if (idx === 3) {\r\n            attractors[3] = new Dadras(p, dt)\r\n            setAttractor(attractors[3])\r\n        } else if (idx === 4) {\r\n            attractors[4] = new Chen(p, dt)\r\n            setAttractor(attractors[4])\r\n        }\r\n    })\r\n\r\n    const updateAttractor = (e) => {\r\n        setAttractor(attractors[e.target.value])\r\n    }\r\n    const updateParticleCount = (event) => {\r\n        event.preventDefault()\r\n        const f = new FormData(event.target)\r\n        setParticles(Number(f.get('particles')))\r\n    };\r\n    const updateTimeStep = (event) => {\r\n        setDT(event.target.value);\r\n    };\r\n    const updateGrid = () => {\r\n        setGridVisibility(!grid.visible);\r\n        grid.visible = !grid.visible\r\n    }\r\n    const [options, setOptionsOpen] = useState(false)\r\n    return (\r\n        <div>\r\n            <div id='options' style={{ position: 'absolute', right: '0px', top: '0px' }}>\r\n                <Paper style={{ position: 'absolute', right: '0px', top: '0px' }}>\r\n                    <IconButton onClick={() => setOptionsOpen(!options)}>\r\n                        {options ? <><ChevronRightIcon /><SettingsIcon /></> : <><ChevronLeftIcon /><SettingsIcon /></>}\r\n                    </IconButton>\r\n                </Paper>\r\n                <Slide direction='left' in={options} mountOnEnter unmountOnExit>\r\n                    <Paper style={{ position: 'absolute', top: '52px', right: '0px', width: '500px', overflow: 'hidden' }}>\r\n                        <Grid container direction='column' style={{ padding: '.85rem' }}>\r\n                            <Grid item xs={12} style={{ marginBottom: '4px' }}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel>ATTRACTOR</InputLabel>\r\n                                    <Select\r\n                                        value={attractor.idx}\r\n                                        onChange={updateAttractor}\r\n                                    >\r\n                                        <MenuItem value={0}>LORENZ</MenuItem>\r\n                                        <MenuItem value={1}>THOMAS</MenuItem>\r\n                                        <MenuItem value={2}>AIZAWA</MenuItem>\r\n                                        <MenuItem value={3}>DADRAS</MenuItem>\r\n                                        <MenuItem value={4}>CHEN</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item container spacing={1}>\r\n                                {attractor.getInfoPanel()}\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Chooses how many particles to render your scene with.\r\n                                            If the FPS is low, try setting this to a lower value.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <form onSubmit={updateParticleCount}>\r\n                                            <TextField name='particles' defaultValue={particles} inputProps={{ type: 'number', step: 'any', min: '1' }} label='PARTICLE COUNT' />\r\n                                            <Button fullWidth type='submit'>UPDATE</Button>\r\n                                        </form>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Chooses what dt is set to for the equations.\r\n                                            If FPS is low, try setting this to a&nbsp;higher value.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <FormControl\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel>TIMESTEP</InputLabel>\r\n                                            <Select\r\n                                                value={dt}\r\n                                                onChange={updateTimeStep}\r\n                                            >\r\n                                                <MenuItem value={.000625}>.000625</MenuItem>\r\n                                                <MenuItem value={.00125}>.00125</MenuItem>\r\n                                                <MenuItem value={.0025}>.005</MenuItem>\r\n                                                <MenuItem value={.005}>.05</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Sets whether old pixels are cleared before the next frame is drawn.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <FormControlLabel\r\n                                            control={<Switch checked={preserveBuffer} onChange={() => setPreserveBuffer(!preserveBuffer)}></Switch>}\r\n                                            label={<Typography style={{ fontSize: '.875rem' }}>TOGGLE BUFFER</Typography>}\r\n                                            labelPlacement='start'\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Toggles visibility of gridlines.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <FormControlLabel\r\n                                            control={<Switch checked={gridVisibility} onChange={updateGrid}></Switch>}\r\n                                            label={<Typography style={{ fontSize: '.875rem' }}>TOGGLE GRID</Typography>}\r\n                                            labelPlacement='start'\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider style={{ marginTop: '4px', marginBottom: '4px' }}></Divider>\r\n\r\n                            <Grid item>\r\n                                <Grid item container spacing={1}>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>Resets the camera position/rotation.</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Button fullWidth onClick={() => camera.position.set(attractor.defaultCam.x, attractor.defaultCam.y, attractor.defaultCam.z)}>Zero Camera</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Slide>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Attractors;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport './index.css';\r\nimport Attractors from './components/projects/attractors/Attractors';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route exact path='/p/strange-attractors'>\r\n                <div>visualizer</div>\r\n            </Route>\r\n            <Route exact path='/p/'>\r\n                <div>all projects</div>\r\n            </Route>\r\n            <Route exact path='/'>\r\n                <Attractors />\r\n            </Route>\r\n        </Switch>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}